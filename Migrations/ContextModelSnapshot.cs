// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using street_foody.Models;

namespace street_foody.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("street_foody.Models.Food", b =>
                {
                    b.Property<string>("FoodID")
                        .HasColumnType("text");

                    b.Property<List<string>>("Categories")
                        .HasColumnType("text[]");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("EnglishName")
                        .HasColumnType("text");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("StreetVendorVendorID")
                        .HasColumnType("text");

                    b.Property<string>("VietameseName")
                        .HasColumnType("text");

                    b.HasKey("FoodID");

                    b.HasIndex("StreetVendorVendorID");

                    b.ToTable("FoodDbSet");
                });

            modelBuilder.Entity("street_foody.Models.FoodCategory", b =>
                {
                    b.Property<string>("FoodCategoryID")
                        .HasColumnType("text");

                    b.Property<string>("CategoryEnglishName")
                        .HasColumnType("text");

                    b.Property<string>("CategoryVietameseName")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FoodID")
                        .HasColumnType("text");

                    b.Property<string>("StreetVendorVendorID")
                        .HasColumnType("text");

                    b.HasKey("FoodCategoryID");

                    b.HasIndex("FoodID");

                    b.HasIndex("StreetVendorVendorID");

                    b.ToTable("FoodCategoryDbSet");
                });

            modelBuilder.Entity("street_foody.Models.StreetVendor", b =>
                {
                    b.Property<string>("VendorID")
                        .HasColumnType("text");

                    b.Property<double>("AverageRating")
                        .HasColumnType("double precision");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<string>("PriceRange")
                        .HasColumnType("text");

                    b.Property<List<int>>("RatingList")
                        .HasColumnType("integer[]");

                    b.Property<string>("StandEnglishName")
                        .HasColumnType("text");

                    b.Property<string>("StandVietnameseName")
                        .HasColumnType("text");

                    b.Property<string>("VendorName")
                        .HasColumnType("text");

                    b.HasKey("VendorID");

                    b.ToTable("StreetVendorDbSet");
                });

            modelBuilder.Entity("street_foody.Models.VendorHours", b =>
                {
                    b.Property<string>("VendorHoursInfo")
                        .HasColumnType("text");

                    b.Property<string>("EndTime")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("StartTime")
                        .HasColumnType("text");

                    b.Property<string>("VendorID")
                        .HasColumnType("text");

                    b.HasKey("VendorHoursInfo");

                    b.ToTable("VendorHoursDbSet");
                });

            modelBuilder.Entity("street_foody.Models.Food", b =>
                {
                    b.HasOne("street_foody.Models.StreetVendor", null)
                        .WithMany("Menu")
                        .HasForeignKey("StreetVendorVendorID");
                });

            modelBuilder.Entity("street_foody.Models.FoodCategory", b =>
                {
                    b.HasOne("street_foody.Models.Food", null)
                        .WithMany("FoodCategories")
                        .HasForeignKey("FoodID");

                    b.HasOne("street_foody.Models.StreetVendor", null)
                        .WithMany("FoodCategories")
                        .HasForeignKey("StreetVendorVendorID");
                });

            modelBuilder.Entity("street_foody.Models.Food", b =>
                {
                    b.Navigation("FoodCategories");
                });

            modelBuilder.Entity("street_foody.Models.StreetVendor", b =>
                {
                    b.Navigation("FoodCategories");

                    b.Navigation("Menu");
                });
#pragma warning restore 612, 618
        }
    }
}
